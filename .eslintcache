[{"/Users/grigio/Sites/affirm/src/App.tsx":"1","/Users/grigio/Sites/affirm/src/layout/content.tsx":"2","/Users/grigio/Sites/affirm/src/index.tsx":"3","/Users/grigio/Sites/affirm/src/modules/cardForm/cardForm.tsx":"4","/Users/grigio/Sites/affirm/src/modules/cardForm/partials/cardDetails.tsx":"5","/Users/grigio/Sites/affirm/src/modules/cardForm/partials/cardImages.tsx":"6","/Users/grigio/Sites/affirm/src/common/validations/baseValidation.ts":"7","/Users/grigio/Sites/affirm/src/common/validations/visaValidation.ts":"8","/Users/grigio/Sites/affirm/src/common/validations/amexValidation.ts":"9","/Users/grigio/Sites/affirm/src/common/validations/validationSingleton.ts":"10"},{"size":176,"mtime":1610216767642,"results":"11","hashOfConfig":"12"},{"size":275,"mtime":1610217742815,"results":"13","hashOfConfig":"12"},{"size":307,"mtime":1610235561929,"results":"14","hashOfConfig":"12"},{"size":1355,"mtime":1610238827059,"results":"15","hashOfConfig":"12"},{"size":2996,"mtime":1610237913465,"results":"16","hashOfConfig":"12"},{"size":547,"mtime":1610219204590,"results":"17","hashOfConfig":"12"},{"size":845,"mtime":1610228027481,"results":"18","hashOfConfig":"12"},{"size":618,"mtime":1610238881744,"results":"19","hashOfConfig":"12"},{"size":709,"mtime":1610238876725,"results":"20","hashOfConfig":"12"},{"size":1332,"mtime":1610236925246,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"wwqcnw",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"/Users/grigio/Sites/affirm/src/App.tsx",[],["45","46"],"/Users/grigio/Sites/affirm/src/layout/content.tsx",[],"/Users/grigio/Sites/affirm/src/index.tsx",[],"/Users/grigio/Sites/affirm/src/modules/cardForm/cardForm.tsx",[],"/Users/grigio/Sites/affirm/src/modules/cardForm/partials/cardDetails.tsx",["47"],"/Users/grigio/Sites/affirm/src/modules/cardForm/partials/cardImages.tsx",["48","49"],"import * as React from 'react';\nimport './cardImages.css'\n\nexport const CardImages = () => {\n\n  return (\n    <div>\n      <img src=\"https://www.merchantequip.com/image/?logos=v&height=64\"/>\n      <img className=\"coming-soon\" src=\"https://www.merchantequip.com/image/?logos=m&height=64\" alt=\"Not implemented\"/>\n      <img src=\"https://www.merchantequip.com/image/?logos=a&height=64\"/>\n      <img className=\"coming-soon\" src=\"https://www.merchantequip.com/image/?logos=d&height=64\" alt=\"Not implemented\"/>\n    </div>\n  );\n}\n\nexport default CardImages","/Users/grigio/Sites/affirm/src/common/validations/baseValidation.ts",[],"/Users/grigio/Sites/affirm/src/common/validations/visaValidation.ts",[],"/Users/grigio/Sites/affirm/src/common/validations/amexValidation.ts",[],"/Users/grigio/Sites/affirm/src/common/validations/validationSingleton.ts",["50"],"import AmexValidation from './amexValidation';\nimport VisaValidation from './visaValidation';\nimport BaseValidation from './baseValidation';\nimport { IFormState } from '../../modules/cardForm/types';\n\nexport class ValidationSingleton {\n  private static instance: ValidationSingleton;\n\n  public static getInstance(): ValidationSingleton {\n    if (!ValidationSingleton.instance) {\n      ValidationSingleton.instance = new ValidationSingleton();\n    }\n\n    return ValidationSingleton.instance;\n  }\n\n  public validateAll(formState: IFormState) {\n    let validation = null;\n    const cardNumber = formState?.cardNumber;\n    if (cardNumber && cardNumber.toString()[0] === '3') {\n      // Use Amex validation\n      validation = new AmexValidation();\n    } else if (cardNumber && cardNumber.toString()[0] === '4') {\n      // Use Visa validation\n      validation = new VisaValidation();\n    } else {\n      // It doesn't matter... just using Visa\n      validation = new VisaValidation();\n    }\n\n    return {\n      name: validation.validateName(formState.name) || null,\n      cardNumber: validation.validateCardNumber(formState.cardNumber) || null,\n      ccv2: validation.validateCcv2(formState.ccv2) || null,\n      expM: validation.validateExpM(formState.expM) || null,\n      expY: validation.validateExpY(formState.expY) || null,\n    }\n  }\n}",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":42,"column":6,"nodeType":"57","endLine":42,"endColumn":17,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":8,"column":7,"nodeType":"61","endLine":8,"endColumn":74},{"ruleId":"59","severity":1,"message":"60","line":10,"column":7,"nodeType":"61","endLine":10,"endColumn":74},{"ruleId":"62","severity":1,"message":"63","line":3,"column":8,"nodeType":"64","messageId":"65","endLine":3,"endColumn":22},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setErrors', 'setHasErrors', and 'validate'. Either include them or remove the dependency array. If 'setHasErrors' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["68"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'BaseValidation' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [formState, setErrors, setHasErrors, validate]",{"range":"71","text":"72"},[1126,1137],"[formState, setErrors, setHasErrors, validate]"]